// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"login-server/pkg/crypto/argon2"
	"login-server/pkg/http"
	"login-server/pkg/jwt"
	"login-server/pkg/user"
	"login-server/pkg/user/inmem"
)

// Injectors from wire.go:

func InitializeServer() (*Server, error) {
	secretProvider, err := NewSecretProviderFromFlags()
	if err != nil {
		return nil, err
	}
	jwtJWT := jwt.New(secretProvider)
	inmemInmem := &inmem.Inmem{}
	saltHasher := NewSaltHasher()
	loginer := NewHTTPLoginFromFlags(inmemInmem, saltHasher)
	loginHandler := http.NewLoginHandler(loginer, secretProvider)
	v := _wireValue
	argon2Hasher := user.NewArgon2Hasher(v...)
	signuper := NewHTTPSignupFromFlags(inmemInmem, argon2Hasher)
	signupHandler := http.NewSignupHandler(signuper, secretProvider)
	router := http.NewRouter(jwtJWT, loginHandler, signupHandler)
	server := NewHTTPServerFromFlags(router)
	mainServer := NewServer(server)
	return mainServer, nil
}

var (
	_wireValue = []argon2.OptionFunc{}
)
